#pragma checksum "C:\Users\Onur Furkan Meral\Desktop\Crm\CrmWebUi\Views\Company\checkbox.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "9d6f87db3f45a808a4945ac67344702feafc896d"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Company_checkbox), @"mvc.1.0.view", @"/Views/Company/checkbox.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 2 "C:\Users\Onur Furkan Meral\Desktop\Crm\CrmWebUi\Views\_ViewImports.cshtml"
using CrmEntity;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Onur Furkan Meral\Desktop\Crm\CrmWebUi\Views\_ViewImports.cshtml"
using CrmWebUi.Identity;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Onur Furkan Meral\Desktop\Crm\CrmWebUi\Views\_ViewImports.cshtml"
using CrmWebUi.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"9d6f87db3f45a808a4945ac67344702feafc896d", @"/Views/Company/checkbox.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"9b12662ff008f5db31089e3143ff4f1b22f68991", @"/Views/_ViewImports.cshtml")]
    public class Views_Company_checkbox : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<List<calisan>>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 5 "C:\Users\Onur Furkan Meral\Desktop\Crm\CrmWebUi\Views\Company\checkbox.cshtml"
  
    Layout = "_Layout";

#line default
#line hidden
#nullable disable
            WriteLiteral("    <div class=\"form-check\">\r\n        <input class=\"form-check-input\" type=\"checkbox\" value=\"man\" id=\"cek1\">\r\n        <label class=\"form-check-label\" for=\"flexCheckDefault\">\r\n            Default checkbox\r\n        </label>\r\n    </div>\r\n");
            WriteLiteral("    <div class=\"form-check\">\r\n        <input class=\"form-check-input\" type=\"checkbox\" value=\"woman\" id=\"cek2\">\r\n        <label class=\"form-check-label\" for=\"flexCheckDefault\">\r\n            Default checkbox\r\n        </label>\r\n    </div>\r\n");
            WriteLiteral(@"    <div class=""form-check"">
        <input class=""form-check-input cbMalzeme"" type=""checkbox"" value=""karpuz"" id=""cek6"">
        <label class=""form-check-label"" for=""flexCheckDefault"">
            Karpuz
        </label>
    </div>
    <div class=""form-check"">
        <input class=""form-check-input cbMalzeme"" type=""checkbox"" value=""kavun"" id=""cek5"">
        <label class=""form-check-label"" for=""flexCheckDefault"">
            Kavun
        </label>
    </div>
    <div class=""form-check"">
        <input class=""form-check-input cbMalzeme"" type=""checkbox"" value=""erik"" id=""cek3"">
        <label class=""form-check-label"" for=""flexCheckDefault"">
            Erik
        </label>
    </div>
    <div class=""form-check"">
        <input class=""form-check-input cbMalzeme"" type=""checkbox"" value=""kiraz"" id=""cek4"">
        <label class=""form-check-label"" for=""flexCheckDefault"">
            Kiraz
        </label>
    </div>
");
            WriteLiteral(@"    <script>



        $(document).ready(function () {

            $(document).on('change', '#cek1', function () {
                var c1 = $('#cek1');
                if (c1.prop(""checked"")) {
                    console.log(c1.val())
                } else {
                    console.log(c1.val() + "" çıkarıldı"")
                }
            })


            
            var malzemeler = [];
            $(document).on('change', '.cbMalzeme', function () {
                var cb = $(this);
                var cb_val = $(this).val();
                if (cb.prop(""checked"")) {
                    console.log(""DİZİYE EKLE => "" + cb_val);
                    malzemeler.push(cb_val);
                    console.log(""malzemeler => "" + malzemeler);
                }
                else {
                    var index = malzemeler.indexOf(cb_val);
                    console.log(""DİZİDEN ÇIKAR => "" + cb_val + ""("" + index + "")"");
                    malzemeler.splice(index, 1);
     ");
            WriteLiteral("               console.log(\"malzemeler => \" + malzemeler);\r\n                }\r\n            })\r\n\r\n             \r\n\r\n        })\r\n\r\n    </script>\r\n");
            WriteLiteral(@"    <div class=""form-check"">
        <input class=""form-check-input araba"" type=""checkbox"" value=""Mercedes"">
        <label class=""form-check-label"" for=""flexCheckDefault"">
            Mercedes
        </label>
    </div><div class=""form-check"">
    <input class=""form-check-input araba"" type=""checkbox"" value=""Volvo"">
    <label class=""form-check-label"" for=""flexCheckDefault"">
        Volvo
    </label>
</div><div class=""form-check"">
    <input class=""form-check-input araba"" type=""checkbox"" value=""Hyundai"" >
    <label class=""form-check-label"" for=""flexCheckDefault"">
        Hyundai
    </label>
</div><div class=""form-check"">
    <input class=""form-check-input araba"" type=""checkbox"" value=""Mclaren"" >
    <label class=""form-check-label"" for=""flexCheckDefault"">
        Mclaren
    </label>
</div>
");
            WriteLiteral(@"<script>
    $(document).ready(function () {
        var arabalar=[]
        $(document).on('change', '.araba', function(){
            var tik = $(this);
            var deger = tik.val()
            if (tik.prop(""checked"")) {
                console.log(deger)
                arabalar.push(deger)
                console.log(""arabalar"" + arabalar);
            } else {
                console.log(""çıkarılan +"" + deger);
                var index = arabalar.indexOf(deger);
                arabalar.splice(index, 1)
                console.log(""arabalar""+arabalar)
            }

        })
    })
</script>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<List<calisan>> Html { get; private set; }
    }
}
#pragma warning restore 1591
